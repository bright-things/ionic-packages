From 9510445c5002b0e3502d2ac09723e1b2ddd03704 Mon Sep 17 00:00:00 2001
From: Hauke Mehrtens <hauke.mehrtens@lantiq.com>
Date: Mon, 26 Oct 2015 14:39:55 +0100
Subject: [PATCH] tinydtls: use types from inittype.h, fix musl libc

The SHA2 code currently uses u_int32_t and similar types without
defining them. This type is not defined by the POSIX standard, but many
libc implementations have it as a non standard extension. In the musl
libc it is not implemented and I am getting a compile error when using
u_int32_t, I should use uint32_t, which is done when
SHA2_USE_INTTYPES_H is set.

This fixes build with musl libs used in OpenWrt.

Change-Id: I485435ddb8b1a2359caedd335ab54f91ca5e3f3e
Signed-off-by: Hauke Mehrtens <hauke.mehrtens@lantiq.com>
---
 extlibs/tinydtls/SConscript |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/extlibs/tinydtls/SConscript
+++ b/extlibs/tinydtls/SConscript
@@ -68,7 +68,7 @@ if not env.get('RELEASE'):
 else:
 	env.AppendUnique(CPPDEFINES = ['NDEBUG'])
 
-env.AppendUnique(CPPDEFINES = ['DTLSV12',  'WITH_SHA256', 'DTLS_CHECK_CONTENTTYPE'])
+env.AppendUnique(CPPDEFINES = ['DTLSV12',  'WITH_SHA256', 'DTLS_CHECK_CONTENTTYPE', 'SHA2_USE_INTTYPES_H'])
 
 
 libtinydtls = env.StaticLibrary('libtinydtls', env.get('TINYDTLS_SRC'), OBJPREFIX='libtinydtls_')
